


# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    #
    # USE OFFICIAL GOOGLE ACTION TO CREATE A CREDENTIALS JSON FILE
    # https://github.com/google-github-actions/auth
    #
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        # uses this encrypted secret set via github repo settings
        # which is essentially a copy of the JSON credentials file contents (for the dev project)
        credentials_json: '${{ secrets.GOOGLE_API_CREDENTIALS }}'
        # this will create a credentials file with a randomized name
        create_credentials_file:  true






    - name: Test with pytest
      env:
        # set environment variable to use during testing
        # ... using the repository secret value set securely via repo settings
        MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
        MAILGUN_SENDER_ADDRESS: ${{ secrets.MAILGUN_SENDER_ADDRESS }}
        MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
        GOOGLE_MAPS_API: ${{ secrets.GOOGLE_MAPS_API }}
        SPREADSHEET_URL: ${{ secrets.SPREADSHEET_URL }}
        GOOGLE_CREDENTIALS_FILEPATH: ${{ steps.auth.outputs.credentials_file_path }}

      run: |
        pytest


